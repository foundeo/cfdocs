{
	"name":"cftry",
	"type":"tag",
	"syntax":"<cftry>",
	"script":"try { } catch (any e) {}",
	"related":["cfcatch","cffinally"],
	"description":"Used with one or more cfcatch tags. Together, they catch and\n process exceptions in CFML pages. Exceptions are events\n that disrupt the normal flow of instructions in a CFML\n page, such as failed database operations, missing include\n files, and developer-specified events.",
	"params": [
	],
	"engines": {
		"coldfusion": {"minimum_version":"4", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-t/cftry.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/tags/try.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/tag/cftry"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/tag/cftry"}
	},
	"links": [

	],
	"examples": [
		{
			"title": "A simple try/catch script based example",
			"description":"Create a divide by zero error and then catch it.",
			"code":"try {\n    x = 5/0;\n}\ncatch (any e) {\n    writeOutput(\"Error: \" & e.message);\n}",
			"result":"Error: Division by zero."
		}
	]

}
