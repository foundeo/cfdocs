{
	"name":"cfoutput",
	"type":"tag",
	"syntax":"<cfoutput>",
	"script":"writeOutput()",
	"related":["cfloop","writeOutput","encodeForHTML","encodeForHTMLAttribute"],
	"description":"Displays output that can contain the results of processing CFML variables and functions. You can use the `query` attribute to loop over the result set of a database query.",
	"params": [
		{"name":"query","description":"Name of cfquery from which to draw data for output section.","required":false,"default":"","type":"query","values":[]},
		{"name":"group","description":"Query column to use to group sets of records. Eliminates\n adjacent duplicate rows when data is sorted. Use if you\n retrieved a record set ordered on one or more a query\n columns. For example, if a record set is ordered on\n \"Customer_ID\" in the cfquery tag, you can group the output\n on \"Customer_ID.\"","required":false,"default":"","type":"string","values":[]},
		{"name":"groupcasesensitive","description":"Whether to consider the case in grouping rows.","required":false,"default":"","type":"boolean","values":[true,false]},
		{"name":"startrow","description":"Row from which to start output. Only considered when the query attribute is set.\nThis attribute in combination with maxrows can be used to create some paging.","required":false,"default":"","type":"numeric","values":[]},
		{"name":"maxrows","description":"Maximum number of rows to display. Only considered when the query attribute is set.","required":false,"default":"","type":"numeric","values":[]},
		{"name":"encodefor","description":"CF2016+ Lucee5.1+ When set applies an encoder to all variables to prevent XSS. For example if you specify `html` each variable will be wrapped by a call to the `encodeForHTML` function.","required":false,"default":"","type":"string","values":["html","htmlattribute","javascript","css","xml","xmlattribute","url","xpath","ldap","dn"]}

	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-m-o/cfoutput.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/tags/output.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/tag/cfoutput"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/tag/cfoutput"}
	},
	"links": [

	],
	"examples": [
		{
	            "title": "Simple Tag Example",
	            "description": "",
	            "code": "<cfoutput>Some text and a #encodeForHTML(variable)#</cfoutput>",
	            "result": ""
	    },
	    {
	            "title": "Loop over a query",
	            "description": "Loops over each row of the query specified and outputs the result.",
	            "code": "<cfoutput query=\"news\">\n    <h2>#encodeForHTML(news.headline)#</h2>\n    <p>#encodeForHTML(news.byline)#</p>\n</cfoutput>",
	            "result": ""
	    },
	    {
	            "title": "Loop over a range of rows of a query",
	            "description": "Loops over 10 rows of the query specified starting from row 5 and outputs the result.",
	            "code": "<cfoutput query=\"news\" startrow=\"5\" maxrows=\"10\">\n    <h2>#encodeForHTML(news.headline)#</h2>\n    <p>#encodeForHTML(news.byline)#</p>\n</cfoutput>",
	            "result": ""
	    },
	    {
	            "title": "Using the encodeFor attribute",
	            "description": "CF2016+ Lucee5.1+ By specifying `encodefor=\"html\"` each variable is encoded using the `encodeForHTML` function before it is output.",
	            "code": "<cfoutput query=\"news\" encodefor=\"html\">\n    <h2>#news.headline#</h2>\n    <p>#news.byline#</p>\n</cfoutput>",
	            "result": ""
	    },
	    {
	            "title": "Using the group attribute",
	            "description": "Creates a dummy query `food`, with columns `name` and `type`. Then outputs the food by grouping by the type.",
	            "code": "<cfset food = queryNew(\"name,type\",\r\n    \"varchar,varchar\",\r\n    [ {name:\"Apple\",type:\"Fruit\"}, \r\n      {name:\"Orange\",type:\"Fruit\"}, \r\n      {name:\"Chicken\",type:\"Meat\"} ])>\r\n<cfoutput query=\"food\" group=\"type\">\r\n    <h2>#type#</h2>\r\n    <ul>\r\n      <cfoutput><li>#name#</li></cfoutput>\r\n    </ul>\r\n</cfoutput>",
	            "result": ""
	    }
	]

}
