{
	"name":"cfexecute",
	"type":"tag",
	"syntax":"<cfexecute name=\"\">",
	"related":[],
	"description":"Executes a CFML developer-specified process on a server\n computer.",
	"params": [
		{"name":"name","description":"Absolute path of the application to execute.\n\n On Windows, you must specify an extension; for example,\n C:\\myapp.exe.","required":true,"default":"","type":"string","values":[]},
		{"name":"arguments","description":"Command-line variables passed to application. If specified\n as string, it is processed as follows:\n * Windows: passed to process control subsystem for parsing.\n * UNIX: tokenized into an array of arguments. The default\n token separator is a space; you can delimit arguments\n that have embedded spaces with double quotation marks.\n If passed as array, it is processed as follows:\n * Windows: elements are concatenated into a string of\n tokens, separated by spaces. Passed to process control\n subsystem for parsing.\n * UNIX: elements are copied into an array of exec()\n arguments","required":false,"default":"","type":"any","values":[]},
		{"name":"outputfile","description":"File to which to direct program output. If no outputfile or\n variable attribute is specified, output is displayed on\n the page from which it was called.\n\n If not an absolute path (starting a with a drive letter and\n a colon, or a forward or backward slash), it is relative\n to the CFML temporary directory, which is returned\n by the GetTempDirectory function.","required":false,"default":"","type":"string","values":[]},
		{"name":"variable","description":"Variable in which to put program output. If no outputfile\n or variable attribute is specified, output is displayed on\n page from which it was called.","required":false,"default":"","type":"string","values":[]},
		{"name":"timeout","description":"Length of time, in seconds, that CFML waits for\n output from the spawned program.","required":false,"default":0,"type":"numeric","values":[]},
		{"name":"errorVariable","description":"The name of a variable in which to save the error stream output.","required":false,"default":"","type":"string","values":[]},
		{"name":"errorFile","description":"The pathname of a file in which to save the error stream output. If not an\nabsolute path (starting a with a drive letter and a colon, or a forward or backward slash), it is\nrelative to the ColdFusion temporary directory, which is returned by the GetTempDirectory\nfunction.","required":false,"default":"","type":"string","values":[]},
		{"name":"terminateOnTimeout","description":"Lucee4.5+ Terminate the process after the specified timeout is reached. Ignored if timeout is not set or is 0.","required":false,"default":"false","type":"boolean","values":[true, false]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"4.5", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-d-e/cfexecute.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/tags/execute.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/tag/cfexecute"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/tag/cfexecute"}
	},
	"links": [

	],
	"examples": [
		{
		"title": "Script syntax",
		"description": "If you want to execute a script (.sh,.cmd,.bat), use bash (linux) or cmd.exe (windows) as the command and the script as argument for the shell interpreter.",
		"code": "cfexecute( name=\"bash\" arguments=\"/opt/jq.sh #cmdArgs#\", variable=\"standardOut\" , errorVariable=\"errorOut\" , timeout=\"10\");",
		"runnable":false
		},
		{
			"title": "Script syntax with terminateOnTimeout",
			"description": "Printing a PDF using lpr",
			"code": "cfexecute(\r\n\tname=\"lpr\",\r\n\targuments=\"-P 'My Print Job Name' 'C:/Users/devguy/Documents/server/mynewfile.pdf'\",\r\n\tsuccess=\"\",\r\n\ttimeout=\"5\",\r\n\tterminateOnTimeout=\"true\"\r\n\t);",
			"runnable":false
		}
	]

}
