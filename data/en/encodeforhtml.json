{
	"name":"encodeForHTML",
	"type":"function",
	"syntax":"encodeForHTML(string [, canonicalize])",
	"returns":"string",
	"related":["htmleditformat", "encodeforhtmlattribute"],
	"description":"Encodes the input string for safe output in the body of a HTML tag. The encoding in meant to mitigate Cross Site Scripting (XSS) attacks. This function can provide more protection from XSS than the `HTMLEditFormat` or `XMLFormat` functions do.",
	"params": [
		{"name":"string","description":"A string to encode","required":true,"default":"","type":"string","values":[]},
		{"name":"canonicalize","description":"If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. The default value for canonicalize is false. \nWhen this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. \nTo use any other combinations you should canonicalize using canonicalize method and then do encoding.","required":false,"default":"false","type":"boolean","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"10", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-e-g/encodeforhtml.html"},
		"lucee": {"minimum_version":"4.5", "notes":"", "docs":"https://docs.lucee.org/reference/functions/encodeforhtml.html"}
	},
	"links": [
        {
            "title":"How to call encodeFor functions in CF8 and CF9",
            "description":"Fully patched CF8 and CF9 servers include the OWASP ESAPI encoder jar.",
            "url":"https://www.petefreitag.com/item/788.cfm"
        },
        {
            "title":"OWASP Cross Site Scripting Guide",
            "description":"Learn more about XSS",
            "url":"https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)"
        }
	],
	"examples": [
		{
			"title": "Simple encodeForHTML Example",
			"description": "Pass in a tag and HTML encode the result.",
			"code": "encodeForHTML(\"<test>\")",
			"result": "&lt;test&gt;"
		}
	]

}
