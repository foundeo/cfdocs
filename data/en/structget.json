{
	"name":"structGet",
	"type":"function",
	"syntax":"structGet(path)",
	"returns":"any",
	"related":[],
	"description":"Returns a value in a structure or a structure in the specified path.",
	"params": [
		{"name":"path","description":"Pathname of variable that contains structure or array from which CFML retrieves the value. If there is no structure or array present in the path, this function creates structures or arrays to make it a valid variable path.","required":true,"default":"","type":"string","values":[]}

	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-s/structget.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/structget.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/structget"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/structget"}
	},
	"links": [

	],
	"examples": [
		{
			"title":"Get a value in a structure using structGet",
			"description":"",
			"code":"x = { y = { z=8 } };\nwriteDump( structGet(\"x.y.z\") );",
			"result":"8"
		},
		{
			"title":"Accidentally Modifying a Structure",
			"description":"The structGet function will modify the variable x by adding a new structure x.a and also adds a key x.a.b to satisfy the path.",
			"code":"x = { y = { z=8 } };\nwriteDump( structGet(\"x.a.b\") );\nwriteDump(x);",
			"result":""
		},
		{
			"title":"Accidentally Overwriting a variable using structGet",
			"description":"The value of x.y.z[2] will be set to an empty struct.",
			"code":"x = { y = { z=[1,2,3] } };\nwriteDump( structGet(\"x.y.z[2]\") );\nwriteDump(x);",
			"result":""
		}
	]

}
