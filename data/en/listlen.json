{
	"name":"listLen",
	"type":"function",
	"syntax":"listLen(list [, delimiters, [includeEmptyValues]])",
	"returns":"numeric",
	"related":["len","arrayLen","structCount"],
	"description":" Determines the number of elements in a list.",
	"params": [
		{"name":"list","description":"A list or a variable that contains one","required":true,"default":"","type":"string","values":[]},
		{"name":"delimiters","description":"A string or a variable that contains one. Characters that separate list elements. The default value is comma. If this parameter contains more than one character, ColdFusion processes each occurrence of each character as a delimiter.","required":false,"default":",","type":"string","values":[]},
		{"name":"includeEmptyValues","description":"CF10+ If includeEmptyValues is set to true, all empty values in the list will be considered when computing length. If set to false, the empty list elements are ignored.","required":false,"default":"NO","type":"string","values":["Yes","No"]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-l/listlen.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/functions/listlen.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/listlen"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/listlen"}
	},
	"links": [],
	"examples": [
		{
			"title":"Simple listLen Example",
			"description":"Get the number of elements in this list",
			"code" : "listLen(\"foo,bar,bar2,foo2\")",
			"result":"4"
		},
		{
			"title":"listLen Example with Delimiter",
			"description":"Get the number of elements in this list using a custom delimiter",
			"code" : "listLen(\"foo,bar|bar2|foo2\", \"|\")",
			"result":"3"
		},
		{
			"title":"listLen Example with IncludeEmptyValues",
			"description":"Get the number of elements in this list, including empty values",
			"code" : "listLen(\"foo,bar,,foo2\", \",\", \"YES\")",
			"result":"4"
		}
	]
}
