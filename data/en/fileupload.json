{
  "name": "fileUpload",
  "type": "function",
  "syntax": "fileUpload(string destination,[string fileField,[string accept,[string nameConflict]]])",
  "returns": "struct",
  "related": [
    "fileUploadAll"
  ],
  "description": "Uploads file to a directory on the server.",
  "params": [
    {
      "name": "destination",
      "description": "Path of directory in which to upload the file. If not an absolute path (starting with a drive letter and a colon, or a forward or backward slash), it is relative to the ColdFusion temporary directory returned by the function getTempDirectory. If the destination you specify does not exist, ColdFusion creates a file with the specified destination name.",
      "required": true,
      "default": "",
      "type": "String",
      "values": []
    },
    {
      "name": "fileField",
      "description": "Name of form field used to select the file. Do not use number signs (#) to specify the field name.",
      "required": false,
      "default": "",
      "type": "String",
      "values": []
    },
    {
      "name": "nameConflict",
      "description": "Action to take if file has the same name of a file in the directory.",
      "required": false,
      "default": "",
      "type": "String",
      "values": [
        "error",
        "skip",
        "overwrite",
        "makeunique"
      ]
    },
    {
      "name": "accept",
      "description": "This attribute takes comma-delimited list of file extensions, or MIME types as values.\nSpecify the extensions with a <code>.</code> prefix. That is, only <code>.txt</code> is supported and not <code>txt</code>, <code>*.txt</code>, or <code>*.*</code>. However, you can use <code>*</code> as a wildcard to accept all files.\nIf you specify a file extension as value, the file is checked, only to ensure if it matches the list of extensions you specified in comma-separated list. If it matches, the file is uploaded.",
      "required": false,
      "default": "",
      "type": "String",
      "values": []
    },
    {
      "name": "strict",
      "description": "CF10+ If strict is set to true, file extensions in the <code>accept</code> attribute are ignored and the MIME type is used.\nThe first few bytes of the file are read to determine the MIME type, if that matches with what you have specified, upload occurs, otherwise an error of type <code>coldfusion.tagext.io.FileUtils$InvalidUploadTypeException</code> is thrown.",
      "required": false,
      "default": false,
      "type": "boolean",
      "values": [
        true,
        false
      ]
    }
  ],
  "engines": {
    "coldfusion": {
      "minimum_version": "9.0.1",
      "notes": "",
      "docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-e-g/fileupload.html"
    },
    "lucee": {
      "minimum_version": "",
      "notes": "",
      "docs": "http://docs.lucee.org/reference/functions/fileupload.html"
    },
    "openbd": {
      "minimum_version": "",
      "notes": "",
      "docs": "http://openbd.org/manual/?/function/fileupload"
    }
  },
  "examples": [
    {
      "title": "Upload form with strict check on MIME type",
      "description": "",
      "code": "<form method=\"post\" enctype=\"multipart/form-data\">\r\n  <input type=\"file\" name=\"myFile\">\r\n  <button type=\"submit\">Upload</button>\r\n</form>\r\n\r\n<cfscript>\r\n  if( isDefined( \"form.myFile\" )) {\r\n    try {\r\n\r\n      fu = fileUpload( \"./\", \"myFile\", \"text/plain\", true );\r\n\r\n      writeDump( fu );\r\n    } catch ( coldfusion.tagext.io.FileUtils$InvalidUploadTypeException e ) {\r\n      writeOutput( \"This upload form only accepts text files.\" );\r\n    }\r\n  }\r\n</cfscript>",
      "result": "",
      "runnable": false
    }
  ],
  "links": []
}