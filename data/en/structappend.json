{
	"name":"structAppend",
	"type":"function",
	"syntax":"structAppend(destStruct, sourceStruct [, overwriteFlag])",
	"member": "destStruct.append(sourceStruct [, overwriteFlag])",
	"returns":"boolean",
	"related":[],
	"description":"Appends one structure to another.",
	"params": [
		{"name":"destStruct","description":"Structure to append.","required":true,"default":"","type":"struct","values":[]},
		{"name":"sourceStruct","description":"Structure that contains the data to append to destStruct","required":true,"default":"","type":"struct","values":[]},
		{"name":"overwriteFlag","description":"Whether values in sourceStruct should overwrite corresponding values in\n destStruct or not.","required":false,"default":true,"type":"boolean","values":[true,false]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"CF6+ can be used on XML objects as well as structures.", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-s/structappend.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/structappend.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/structappend"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/structappend"}
	},
	"links": [],
	"examples": [
		{
			"title":"Append options to config struct (without overwrite flag)",
			"description":"",
			"code":"config = {a:0, b:0};\noptions= {b:1, c:1};\nstructAppend(config, options, false);\nwriteOutput( serializeJSON( config ) );",
			"result":"{\"A\":0,\"B\":0,\"C\":1}",
			"runnable": true
		},
		{
			"title":"Append options to config struct (same, but using member function)",
			"description":"",
			"code":"config = {a:0, b:0};\noptions= {b:1, c:1};\nconfig.append(options, false);\nwriteOutput( serializeJSON( config ) );",
			"result":"{\"A\":0,\"B\":0,\"C\":1}",
			"runnable": true
		},
		{
			"title":"Append options to config struct (with overwrite flag)",
			"description":"",
			"code":"config = {a:0, b:0};\noptions= {b:1, c:1};\nstructAppend(config, options);\nwriteOutput( serializeJSON( config ) );",
			"result":"{\"A\":0,\"B\":1,\"C\":1}",
			"runnable": true
		},
		{
			"title":"Creating a request context from form and url scopes",
			"description":"Demonstrates how to construct a Request Context (rc) that combines the values of the form and url scopes",
			"code":"rc = {};\nstructAppend( rc, form );\nstructAppend( rc, url );\nwriteOutput( serializeJSON( rc ) );",
			"result": "",
			"runnable": false
		},
		{
			"title": "Polyfill for earlier versions",
			"description": "In older coldfusion version where this function is not supported yet, you can fall back to a native java method to achieve the same behavior except that it does not have the `overwriteFlag`.",
			"code":"config = {a:0, b:0};\noptions= {b:1, c:1};\nconfig.putAll(options);\nwriteOutput( serializeJSON( config ) );",
			"result":"{\"A\":0,\"B\":0,\"C\":1}",
			"runnable": true
		}
	]
}
