{
	"name":"arrayEach",
	"type":"function",
	"syntax":"arrayEach(array array, function(item, [index, [array]]) closure, [boolean parallel], [number maxThreads])",
	"member":"someArray.each(function(item, [index, [array]]) closure, [boolean parallel], [number maxThreads])",
	"returns":"void",
	"related":["arrayMap", "arrayReduce"],
	"description":"Used to iterate over an array and run the function closure for each item in the array.",
	"params": [ 
		{"name":"array","description":"","required":true,"default":"","type":"Array","values":[]},
		{"name":"closure","description":"function / closure with the signature: any function (any item, [numeric index], [array array]) - will be executed once per item in the array","required":true,"default":"","type":"Closure","values":[]},
		{"name":"parallel","description":"Railo only option, true or false if the items can be executed in parallel","required":false,"default":"false","type":"Boolean","values":[true, false]},
		{"name":"maxThreads","description":"Railo only option, the number of threads to use when parallel = true","required":false,"default":"20","type":"Boolean","values":[]}

	],
	"engines": {
		"coldfusion": {"minimum_version":"10", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arrayeach.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/functions/arrayeach.html"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/arrayeach"}
	},
	"links":[{
		"title":"Map, Reduce and other Higher Order Functions",
		"description":"A Primer for map, reduce, filter, and Higher Order Functions in general.",
		"url":"http://ryanguill.com/functional/higher-order-functions/2016/05/18/higher-order-functions.html"
	},
	{
		"title": "ColdFusion 11: .map() and .reduce()",
		"description": "A look at the new .map() and .reduce() methods that each of array, struct and lists all have",
		"url":"http://blog.adamcameron.me/2014/02/coldfusion-11-map-and-reduce.html"
	}],
	"examples": [
		{
			"title": "Simple Example",
			"description": "",
			"code": "letters = [\"a\",\"b\",\"c\",\"d\"]; \r\narrayEach(letters, function(element,index) \r\n {\r\n    writeOutput(\"#index#:#element#;\");\r\n});",
			"result": "1:a;2:b;3:c;4:d;"
		},
		{
			"title": "Member Function Example",
			"description": "Array Loop -- array.Each()",
			"code": "a = [\"a\",\"b\",\"c\"];\r\na.each(function(element,index,array){\r\n    writeOutput(\"#index#:#element#;\"); \r\n});",
			"result": "1:a;2:b;3:c;"
		}
	]
	
}