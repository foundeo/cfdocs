{
	"name": "each",
	"type": "function",
	"syntax": "each(collection, closure [, parallel] [, maxThreads])",
	"returns": "void",
	"related": ["collectionEach"],
	"description": "Function that will call the given UDF/Closure with every entry (key/value) in the given collection.",
	"params": [
		{"name": "collection", "description": "Collection to take values from.", "required": true, "default": "", "type": "any", "values": []},
		{"name": "closure", "description": "UDF/Closure that is called with each entry from the collection.", "required": true, "default": "", "type": "function", "values": []},
		{"name": "parallel", "description": "Execute the closures in parallel.", "required": false, "default": "false", "type": "boolean", "values": []},
		{"name": "maxThreads", "description": "Maximum number of threads executed. Ignored when `parallel` argument is set to `false`.", "required": false, "default": "20", "type": "numeric", "values": []}
	],
	"engines": {
		"lucee": {"minimum_version": "", "notes": "", "docs": "https://docs.lucee.org/reference/functions/each.html"}
	},
	"links": [],
	"examples": [{
		"title":"Iterate over collection and output a key from each item",
		"description":"",
		"code":"coll = [{\r\n    id: 0,\r\n    name: 'me'\r\n},{\r\n    id: 1,\r\n    name: 'you'\r\n}];\r\nfunction outputCollection(item) {\r\n    writeOutput(item.name);\r\n    writeOutput(' - ');\r\n}\r\neach(coll,outputCollection,true);",
		"result":"me - you -",
		"runnable":true
	}]
}
