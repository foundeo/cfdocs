{
	"name":"arrayFind",
	"type":"function",
	"syntax":"arrayFind(array, value)",
	"member":"someArray.find(value)",
	"returns":"numeric",
	"related":["arrayContains","arrayFind","arrayFindNoCase","arrayFindAll","arrayFindAllNoCase"],
	"description":"These functions searches the array for the specified value. Returns the index in the array of the first match, or 0 if there is no match.",
	"params": [
		{"name":"array","description":"The array you are searching.","required":true,"default":"","type":"array","values":[]},
		{"name":"value","description":"The value you are looking for in the array. CF10+ or Lucee4.5+ support passing a closure function in this argument as well.","required":true,"default":"","type":"any","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"9", "notes":"CF10+ Added support for closure instead of value", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arrayfind.html"},
		"lucee": {"minimum_version":"", "notes":"Lucee4.5+ Added support for closure instead of value", "docs":"https://docs.lucee.org/reference/functions/arrayfind.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/arrayfind"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/arrayfind"}
	},
	"links": [],
	"examples": [
		{
			"title":"Find an \"apple\" in an array of fruit",
			"description":"Returns the index of the element \"apple\" in the array",
			"code":"writeOutput( arrayFind( [\"orange\",\"pineapple\",\"apple\"], \"apple\" ));",
			"result":"3",
			"runnable":true
		},
		{
			"title":"Member Functions: Find an \"apple\" in an array of fruit",
			"description":"Calls the find member function of the array object. Requires CF11+ or Lucee4.5+",
			"code":"fruit = [ \"orange\", \"pineapple\", \"apple\" ];\nwriteOutput( fruit.find( \"apple\" ) );",
			"result":"3",
			"runnable":true
		},
		{
			"title":"arrayFind is Case Sensitive",
			"description":"Case sensitive so \"Apple\" is not in the array, returns 0. Use arrayFindNoCase for case insensitive matching.",
			"code":"writeOutput( arrayFind([\"orange\",\"pineapple\",\"apple\"], \"Apple\") );",
			"result":"0",
			"runnable":true
		},
		{
			"title":"Using arrayFind with a closure / callback function",
			"description":"CF10+ Lucee4.5+ The arrayFind function passes each array value into the supplied function. The function returns a boolean, `true` if you found what you are looking for. The result of the arrayFind function is the index of the first matching array element found, or `0` if not found. Use arrayFindAll to return an array of all found item indexes.",
			"code":"a = [5,4,3,2,1];\npos = arrayFind(a, function(item) {\n\treturn item == 2;\n});\nwriteOutput(pos);",
			"result":"4",
			"runnable":true
		}
	]
}
