{
	"name": "directoryList",
	"type": "function",
	"syntax": "directoryList(path [, recurse] [, listInfo] [, filter] [, sort] [, type])",
	"returns": "any",
	"related": [
		"cfdirectory"
	],
	"description": "List the contents of a directory. Returns either an array, or a query. \rNOTE: Ensure that you have the required permissions to run this function.",
	"params": [
		{
			"name": "path",
			"description": "The absolute path of the directory for which to list the contents. Alternatively, you can specify IP address as in the following example: `DirectoryList(\"//12.3.123.123/c_drive/test\");`.",
			"required": true,
			"default": "",
			"type": "string",
			"values": []
		},
		{
			"name": "recurse",
			"description": "If `true` directoryList traverses the directory tree.",
			"required": false,
			"default": "false",
			"type": "boolean",
			"values": [
				true,
				false
			]
		},
		{
			"name": "listInfo",
			"description": "Sets the return type. `name` returns an array with only the file names, `path` returns an array with the full path names and `query` returns a query containing the following fields: `Attributes`, `DateLastModified`, `Directory`, `Link`, `Mode`, `Name`, `Size`, `Type`.",
			"required": false,
			"default": "path",
			"type": "string",
			"values": [
				"name",
				"path",
				"query"
			]
		},
		{
			"name": "filter",
			"description": "File extension filter applied to the listed files, for example, `*.jpg`. \rMultiple filters can be applied by using a pipe delimiter. For example: `*.doc|*.xls`. \rYou can also pass a function. The arguments of the passed function must have: `path` :the file path, `type`: The values (file or dir), `extension`: The file extension, if any, otherwise and empty string. \rThis argument can also accept the instances of Java `FileFilter` Objects. \rIn Lucee4.5+ it can be a closure as well.",
			"required": false,
			"default": "",
			"type": "string",
			"values": []
		},
		{
			"name": "sort",
			"description": "Columns by which to sort. e.g. `Directory, Size DESC, DateLastModified`. To qualify a column, use `asc` (ascending sort a-z) or `dec` (descending sort z-a).",
			"required": false,
			"default": "",
			"type": "string",
			"values": []
		},
		{
			"name": "type",
			"description": "CF11+ Lucee5+ Filter the result to only include files, directories, or both.",
			"required": false,
			"default": "all",
			"type": "string",
			"values": [
				"file",
				"dir",
				"all"
			]
		}
	],
	"engines": {
		"coldfusion": {
			"minimum_version": "9",
			"notes": "Only CF11+ supports the type argument.",
			"docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-c-d/DirectoryList.html"
		},
		"lucee": {
			"minimum_version": "",
			"notes": "In Lucee the `filter` param can be a closure as well where the path is passed in. The `sort` argument only works when `listInfo=\"query\"`.",
			"docs": "https://docs.lucee.org/reference/functions/directorylist.html"
		},
		"railo": {
			"minimum_version": "",
			"notes": "If a directory returns false in recursive mode the contained files are processed anyways",
			"docs": "http://railodocs.org/index.cfm/function/directorylist"
		},
		"openbd": {
			"minimum_version": "",
			"notes": "",
			"docs": "http://openbd.org/manual/?/function/directorylist"
		}
	},
	"links": [
		{
		    "title":"Enhance closure filter on directory copy (Lucee Development / LDEV-1542)",
		    "description":"Support ticket by Brad Wood describing the filter misbehavior in recursive mode",
		    "url":"https://luceeserver.atlassian.net/browse/LDEV-1542"
		}
	],
	"examples": [
		{
			"title": "An array of files in this directory",
			"description": "",
			"code": "arrayOfLocalFiles = directoryList( expandPath( \"./\" ), false, \"name\" );",
			"result": "",
			"runnable": false
		},
		{
			"title": "A query of files in this directory sorted by date last modified",
			"description": "",
			"code": "queryOfFiles = directoryList( expandPath( \"./\" ), false, \"query\", \"\", \"DateLastModified DESC\" );",
			"result": "",
			"runnable": false
		},
		{
			"title": "An array of files in the temp directory",
			"description": "Including sub-directories and as an array containing full paths",
			"code": "arrayOfTempFiles = directoryList( \"./\", true );",
			"result": "",
			"runnable": false
		},
		{
			"title": "Filter files with closure",
			"description": "Lucee4.5+ Pass a closure instead of a string as `filter` param",
			"code": "arrayOfFilteredFiles = directoryList(\".\", false, \"name\", function(path) {\n\treturn ListFindNoCase(\"Application.cfc,robots.txt,server.json,favicon.ico,.htaccess,README.md\", path);\n});",
			"result": "",
			"runnable": false
		}
	]
}
