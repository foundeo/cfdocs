{
	"name":"encodeForLDAP",
	"type":"function",
	"syntax":"encodeForLDAP(string [,canonicalize]);",
	"returns":"string",
	"related":["encodeForDN"],
	"description":"Encodes the input string for safe output in LDAP queries to prevent Cross Site Scripting attacks.",
	"params": [
		{"name":"string","description":"String to encode.","required":true,"default":"","type":"string","values":[]},
		{"name":"canonicalize","description":"If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. \nWhen this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. \nTo use any other combinations you should canonicalize using canonicalize method and then do encoding.","required":false,"default":"false","type":"boolean","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"11", "notes":"Works on CF11+ but not documented.", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-by-category/display-and-formatting-functions.html"},
		"lucee": {"minimum_version":"4.5", "notes":"", "docs":"https://docs.lucee.org/reference/functions/encodeforldap.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/EncodeForLDAP"}
	},
	"links": [],
	"examples": [
       	 	{
			"title": "Script Syntax",
			"description": "",
			"code": "encodeForLDAP(\"pete) (| (password = * ) )\")",
			"result": "pete\\29 \\28| \\28password = \\2a \\29 \\29"
		}
	]
}
