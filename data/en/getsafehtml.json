{
  "syntax": "getSafeHTML(inputString [, PolicyFile, throwOnError])",
  "description": "Sanitizes HTML using antisamy policy rules. ",
  "engines": {
    "coldfusion": {
      "minimum_version": "11",
      "docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-e-g/getsafehtml.html",
      "notes": ""
    }
  },
  "name": "getSafeHTML",
  "links": [
    {
      "title": "OWASP antisamy",
      "description": "AntiSamy OWASP Project page",
      "url": "https:\/\/www.owasp.org\/index.php\/Category:OWASP_AntiSamy_Project"
    },
    {
      "title": "Google Code for AntiSamy",
      "description": "",
      "url": "https:\/\/code.google.com\/p\/owaspantisamy\/"
    }
  ],
  "params": [
    {
      "values": [],
      "default": "",
      "description": "String to be sanitized",
      "name": "inputString",
      "type": "string",
      "required": "1"
    },
    {
      "values": [],
      "default": "",
      "description": "File path for custom antisamy policy file. Can be defined in the application scope or if not defined will use ColdFusion server default",
      "name": "PolicyFile",
      "type": "string",
      "required": "0"
    },
    {
      "values": [],
      "default": "",
      "description": "If true will throw error else empty string will be returned",
      "name": "throwOnError",
      "type": "boolean",
      "required": "0"
    }
  ],
  "returns": "any",
  "examples": [
    {
      "result": "",
      "title": "application setting demo",
      "description": "AntiSamy parameter can be set in the application scope",
      "code": "\r\n<cfcomponent>\r\n  <cfset this.security.antisamypolicy = \"antisamy.xml\">\r\n<\/cfcomponent>"
    },
    {
      "result": "",
      "title": "Usage",
      "description": "demonstrates usage",
      "code": "<cfset  SafeHTML = getSafeHTML(inputHTML, \"\", true)>"
    }
  ],
  "type": "function",
  "related": [
    "isSafeHTML"
  ]
}