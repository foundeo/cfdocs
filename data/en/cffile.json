{
	"name":"cffile",
	"type":"tag",
	"syntax":"<cffile action=\"read\">",
	"script":"fileRead(path);",
	"related":["fileread","filewrite","fileopen","filereadline"],
	"description":"Manages interactions with server files.\n Different combinations cause different attributes to be\n required.",
	"params": [
		{"name":"action","description":"Type of file manipulation that the tag performs.","required":true,"default":"","type":"string","values":["append","copy","delete","move","read","readbinary","rename","upload","uploadall","write"]},
		{"name":"file","description":"Pathname of the file.","required":false,"default":"","type":"string","values":[]},
		{"name":"mode","description":"Applies only to UNIX and Linux. Permissions. Octal values\n of Unix chmod command. Assigned to owner, group, and\n other, respectively.","required":false,"default":"","type":"string","values":[]},
		{"name":"output","description":"String to add to the file","required":false,"default":"","type":"string","values":[]},
		{"name":"addnewline","description":"Yes: appends newline character to text written to file","required":false,"default":true,"type":"boolean","values":[true,false]},
		{"name":"attributes","description":"Applies to Windows. A comma-delimited list of attributes\n to set on the file.\n\n If omitted, the file's attributes are maintained.","required":false,"default":"","type":"string","values":["readonly","hidden","normal","system","temporary"]},
		{"name":"charset","description":"The character encoding in which the file contents is\n encoded.\n\n For more information on character encodings, see:\n www.w3.org\/International\/O-charset.html.","required":false,"default":"","type":"string","values":["utf-8","iso-8859-1","windows-1252","us-ascii","shift_jis","iso-2022-jp","euc-jp","euc-kr","big5","euc-cn","utf-16"]},
		{"name":"source","description":"Pathname of the file (during copy).","required":false,"default":"","type":"string","values":[]},
		{"name":"destination","description":"Pathname of a directory or file on web server\n (during copy).","required":false,"default":"","type":"string","values":[]},
		{"name":"variable","description":"Name of variable to contain contents of text file.","required":false,"default":"","type":"string","values":[]},
		{"name":"filefield","description":"Name of form field used to select the file.\n\n Do not use pound signs (#) to specify the field name.","required":false,"default":"","type":"string","values":[]},
		{"name":"nameconflict","description":"Action to take if filename is the same as that of a file\n in the directory.","required":false,"default":"","type":"string","values":["error","skip","overwrite","makeunique"]},
		{"name":"accept","description":"Limits the MIME types to accept. Comma-delimited list. For\n example, to permit JPG and Microsoft Word file uploads:\n\n accept = \"image\/jpg, application\/msword\"","required":false,"default":"","type":"string","values":[]},
		{"name":"result","description":"Allows you to specify a name for the variable in which cffile\n returns the result (or status) parameters. If you do not specify\n a value for this attribute, cffile uses the prefix \"cffile\".","required":false,"default":"cffile","type":"variableName","values":[]},
		{"name":"fixnewline","description":"* Yes: changes embedded line-ending characters in string\n variables to operating-system specific line endings\n * No: (default) do not change embedded line-ending\n characters in string variables.","required":false,"default":false,"type":"string","values":[true,false]},
		{"name":"cachedwithin","description":"Lucee5+ Timespan, using the CreateTimeSpan function. If original\n file date falls within the time span, cached file data is\n used. CreateTimeSpan defines a period from the present, back.","required":false,"default":"","type":"Timespan","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"2", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-f/cffile.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"http://docs.lucee.org/reference/tags/file.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/tag/cffile"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/tag/cffile"}
	},
	"links": [

	],
	"examples": [
		{
			"title": "Script Syntax",
			"description": "File Write",
			"code": "fileWrite(expandPath(\"./myFile.txt\"), \"Here's some content for my file.\");",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Append - There is no fileAppend() so we access the file and use fileWriteLine()",
			"code": "myFile = fileOpen(expandPath(\"./myFile.txt\"), \"write\"); \r\n fileWriteLine(myFile, \"Here's some new content.\"); \r\n fileClose(myFile);",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Read",
			"code": "myFile = fileRead(expandPath(\"./myFile.txt\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Read Binary",
			"code": "myImageBinary = fileReadBinary(expandPath(\"./myImage.jpg\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Rename - Since there is no fileRename(), fileMove() works just as well",
			"code": "fileMove(expandPath(\"./myFile.txt\"), expandPath(\"./myNewFileName.txt\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Copy",
			"code": "fileCopy(expandPath(\"./myFile.txt\"), expandPath(\"./some/other/path\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Move",
			"code": "fileMove(expandPath(\"./myFile.txt\"), expandPath(\"./some/other/path\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Delete",
			"code": "fileDelete(expandPath(\"./myFile.txt\"));",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Upload",
			"code": "fileUpload(expandPath(\"./destination\"), \"form.myFile\", \" \", \"makeunique\");",
			"result": ""
		},
		{
			"title": "Script Syntax",
			"description": "File Upload All",
			"code": "fileUploadAll(expandPath(\"./destination\"), \" \", \"makeunique\");",
			"result": ""
		},
	        {
	            "title": "Tag Syntax",
	            "description": "File Write",
	            "code": "<cffile action=\"write\" file=\"#expandPath(\"./myFile.txt\")#\" output=\"Here's some content for my file.\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Append",
	            "code": "<cffile action=\"append\" file=\"#expandPath(\"./myFile.txt\")#\" attributes=\"normal\" output=\"Here's some new content.\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Read",
	            "code": "<cffile action=\"read\" file=\"#expandPath(\"./myFile.txt\")#\" variable=\"myFile\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Read Binary",
	            "code": "<cffile action=\"readBinary\" file=\"#expandPath(\"./myImage.jpg\")#\" variable=\"myImageBinary\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Rename",
	            "code": "<cffile action=\"rename\" source=\"#expandPath(\"./myFile.txt\")#\" destination=\"#expandPath(\"./myNewFileName.txt\")#\" attributes=\"normal\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Copy",
	            "code": "<cffile action=\"copy\" source=\"#expandPath(\"./myFile.txt\")#\" destination=\"#expandPath(\"./some/other/path\")#\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Move",
	            "code": "<cffile action=\"move\" source=\"#expandPath(\"./myFile.txt\")#\" destination=\"#expandPath(\"./some/other/path\")#\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Delete",
	            "code": "<cffile action=\"delete\" file=\"#expandPath(\"./myFile.txt\")#\">",
	            "result": ""
	        },
	        {
	            "title": "Tag Syntax",
	            "description": "File Upload",
	            "code": "<cffile action=\"upload\" destination=\"#expandPath(\"./destination)#\" filefield=\"form.myFile\" nameconflict=\"makeunique\">",
	            "result": ""
	        }
	        ,
	        {
	            "title": "Tag Syntax",
	            "description": "File Upload All",
	            "code": "<cffile action=\"uploadall\" destination=\"#expandPath(\"./destination\")#\" nameconflict=\"makeunique\">",
	            "result": ""
	        }
	]

}
