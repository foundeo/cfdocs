{
	"name":"arrayNew",
	"type":"function",
	"syntax":"arrayNew(dimension [, isSynchronized])",
	"returns":"array",
	"related":["structNew","queryNew"],
	"description":"Creates an array of 1-3 dimensions. Index array elements with square brackets: [ ]. CFML arrays expand dynamically as data is added.",
	"params": [
		{"name":"dimension","description":"","required":true,"default":1,"type":"numeric","values":[1,2,3]},
		{"name":"isSynchronized","description":"CF2016+ Lucee5.1+ When true creates a synchronized array. Unsynchronized arrays are not thread safe so they should not be used within shared scopes (application, session, etc). According to the CF2016 Performance whitepaper: Unsynchronized arrays are about 93% faster due to lock avoidance.","required":false,"default":false,"type":"boolean","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"3", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arraynew.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/arraynew.html"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/arraynew"}
	},
	"links": [
		{
			"title":"Adobe CF2016 Performance Whitepaper",
			"url":"http://wwwimages.adobe.com/content/dam/acom/en/products/coldfusion/pdfs/cf2016/CF2016_Performance.pdf",
			"description":"According to this document: Unsynchronized arrays are about 93% faster due to lock avoidance"
		}
	],
	"examples": [
		{
			"title": "Create the One dimensional array",
			"description": "Uses the arrayNew function to create the new array",
			"code": "newArray = arrayNew(1);\nsomeArray = arraySet(newArray, 1, 4, \"All is well\");\nwriteOutput( serializeJSON(newArray) );",
			"result": "[\"All is well\", \"All is well\", \"All is well\", \"All is well\"]"
		},
		{
			"title": "Create the Two dimensional array",
			"description": "Uses the arrayNew function to create the new array",
			"code": "newArray = arrayNew(2);\nnewArray[1][1] = \"First value\";\nnewArray[1][1] = \"First value\";\nnewArray[1][2] = \"First value\";\nnewArray[2][1] = \"Second value\";\nnewArray[2][2] = \"Second value\";\nwriteOutput( serializeJSON(newArray) );",
			"result": "[[\"First value\", \"First value\"],[\"Second value\", \"Second value\"]]"
		},
		{
			"title": "Create unsynchronized array",
			"description": "CF2016+ Uses the arrayNew function to create the new unsynchronized array",
			"code": "newArray = arrayNew(1, true);\nnewArray.append(\"one\");\nwriteOutput( serializeJSON(newArray) );",
			"result": "[\"one\"]"
		},
		{
			"title": "Create an array using implicit notation",
			"description": "CF8+ Instead of using arrayNew you can also create an array using square brackets.",
			"code": "newArray = [\"one\",\"two\"];\nwriteOutput( serializeJSON(newArray) );",
			"result": "[\"one\", \"two\"]"
		}
	]
}
