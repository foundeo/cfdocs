{
    "engines": {"lucee": {"docs": "https://docs.lucee.org/reference/functions/execute.html"}},
    "name": "execute",
    "description": "Enables developers to execute a process on a server computer.",
    "syntax": "<execute/>",
    "returns": "void",
    "type": "tag",
    "params": [
        {
            "name": "name",
            "description": "The full pathname of the application to execute.\n\nNote: On Windows, you must specify the extension as part of the application's name. For example,\nmyapp.exe,",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "arguments",
            "description": "Command-line arguments passed to the application.\n\n- arguments as a string\n- arguments as an Array (recommended)\n",
            "default": false,
            "type": "any",
            "required": false
        },
        {
            "name": "outputfile",
            "description": "The file to which to direct the output of the program. If not specified, the output is\ndisplayed on the page from which it was called.",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "timeout",
            "description": "Indicates how long, in seconds, the executing thread waits for the spawned process.\n\nA timeout of 0 is equivalent to the non-blocking mode of executing. A very high timeout value is\nequivalent to a blocking mode of execution. The default is 0; therefore, the thread spawns\na process and returns without waiting for the process to terminate.If no output file is specified,\nand the timeout value is 0, the program output is discarded.",
            "default": false,
            "type": "number",
            "required": false
        },
        {
            "name": "terminateontimeout",
            "description": "terminate execution of process when timeout occur. Defaults to false.\n",
            "default": false,
            "type": "boolean",
            "required": false
        },
        {
            "name": "variable",
            "description": "Variable in which to put program output.\n\nIf no output file or variable attribute is specified,\noutput is displayed on page from which it was called.",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "errorfile",
            "description": "The file to which to direct the error stream of the program. If neither errorFile nor errorVariable is specified, the error stream is discarded.",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "errorvariable",
            "description": "Variable in which to put program error stream output. If neither errorFile nor errorVariable is specified, the error stream is discarded.",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "directory",
            "description": "The working directory in which to execute the command",
            "minimum_version": "str",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "environment",
            "description": "An array of key value pairs",
            "minimum_version": "str",
            "default": false,
            "type": "struct",
            "required": false
        },
        {
            "name": "result",
            "description": "The name of a variable to place the return struct, containing [ output, error, exitCode ]",
            "minimum_version": "str",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "exitcodevariable",
            "description": "Variable in which to put the exit code value.",
            "minimum_version": "str",
            "default": false,
            "type": "string",
            "required": false
        },
        {
            "name": "onprogress",
            "description": "A UDF which receives two arguments, the progressive output and the java Process instance for the execution.\nIf defined, output to the other variables will be null.\nThe java Process instance can be used to interact with the executing process, i.e. via getOutputSteam().\nhttps://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/Process.html \nReturning false from the Listener will cancel the process execution",
            "minimum_version": "any",
            "default": false,
            "type": "any",
            "required": false
        },
        {
            "name": "onerror",
            "description": "A UDF Listener which receives a single argument, output. \nOptional, If a OnProgress Listener is defined, but no onError listener, the error stream is redirected to the onProgress Listener.\nReturning false from the Listener will cancel the process execution",
            "minimum_version": "any",
            "default": false,
            "type": "any",
            "required": false
        }
    ]
}