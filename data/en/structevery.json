{
	"name": "structEvery",
	"type": "function",
	"syntax": "structEvery(struct, closure [, parallel] [, maxThreads])",
	"member": "struct.every(closure [, parallel] [, maxThreads])",
	"returns": "boolean",
	"related": [],
	"description": "This function calls a given closure/function with every element in a given struct and returns true, if all of the closure calls returns true",
	"params": [
		{"name": "struct", "description": "", "required": true, "default": "", "type": "struct", "values": []},
		{"name": "closure", "description": "", "required": true, "default": "", "type": "function", "values": []},
		{"name": "parallel", "description": "", "required": false, "default": "", "type": "boolean", "values": []},
		{"name": "maxThreads", "description": "", "required": false, "default": "20", "type": "numeric", "values": []}
	],
	"engines": {
		"lucee": {"minimum_version": "", "notes": "", "docs": "https://docs.lucee.org/reference/functions/structevery.html"}
	},
	"examples": [
		{
			"title":"Simple structEvery example",
			"description":"Here we have simple example about structevery function. It is supported only in Lucee.",
			"code":"var struct = {\"Name\":\"Dhar\",\"Age\":\"20\",\"Country\":\"US\"};\r\nstructevery(struct,function(key,value){\r\n\twriteOutput(key & \":\" & value & \" \");\r\n\treturn true;\r\n});",
			"result":"Country:US Name:Dhar Age:20"
		},
		{
			"title":"Simple structEvery member function example",
			"description":"Here we have simple example about structevery member function. It is supported only in Lucee.",
			"code":"var struct = {\"Name\":\"Dhar\",\"Age\":\"20\",\"Country\":\"US\"};\r\nstruct.every(function(key,value){\r\n\twriteOutput(key & \":\" & value & \" \");\r\n\treturn false;\r\n});",
			"result":"Country:US"
		}
	],
	"links": [{
		"title":"Map, Reduce and other Higher Order Functions",
		"description":"A Primer for map, reduce, filter, and Higher Order Functions in general.",
		"url":"http://ryanguill.com/functional/higher-order-functions/2016/05/18/higher-order-functions.html"
	}]
}