{
	"name":"listSort",
	"type":"function",
	"syntax":"listSort(list, sort_type [, sort_order] [, delimiters])",
	"returns":"string",
	"related":["structSort","arraySort","querySort"],
	"description":" Sorts list elements according to a sort type and sort order.\n Returns a sorted copy of the list.\n [sort_type - quicky]\n numeric: sorts numbers\n text: sorts text alphabetically, taking case into account\n - aabzABZ, if sort_order = \"asc\"\n - ZBAzbaa, if sort_order = \"desc\"\n textnocase: sorts text alphabetically, without regard to case\n - aAaBbBzzZ, in an asc sort;\n - ZzzBbBaAa, in a desc sort;",
	"params": [
		{"name":"list","description":"A list or variable name","required":true,"default":"","type":"string","values":[]},
		{"name":"sort_type","description":"numeric: sorts numbers\n text: sorts text alphabetically, taking case into account\n (also known as case sensitive).\n - aabzABZ for ascending sort(sort_order = \"asc\")\n - ZBAzbaa for descending sort(sort_order = \"desc\")\n\n textnocase: sorts text alphabetically, without regard to\n case (also known as case-insensitive).\n - aAaBbBzzZ for ascending sort(sort_order = \"asc\")\n - ZzzBbBaAa for descending sort(sort_order = \"desc\")","required":true,"default":"","type":"string","values":[]},
		{"name":"sort_order","description":"","required":false,"default":"asc","type":"string","values":["asc: ascending (a to z) sort order.","desc: descending (z to a) sort order" ]},
		{"name":"delimiters","description":"","required":false,"default":",","type":"string","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"4", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-l/listsort.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/listsort.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/listsort"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/listsort"}
	},
	"links": [],
	"examples": [
		{
		    "title": "Simple example for listSort function",
		    "description": "Uses the listSort() function to get the list which sorted by type text(case-sensitive)",
		    "code": "list = \"COLDFUSION,coldfusion,adobe,LucEE,RAILO\";\nsortList = listSort(list, \"Text\", \"desc\");\nwriteOutput(sortList);",
		    "result": "coldfusion,adobe,RAILO,LucEE,COLDFUSION "
		},
		{
		    "title": "Example for listSort function with delimiters",
		    "description": "Uses the listSort() function with delimiters to get the list which sorted by type numeric",
		    "code": "list = \"10;20;-99;46;50\";\nsortList = listSort(list, \"Numeric\", \"asc\", \";\");\nwriteOutput(sortList);",
		    "result": "-99;10;20;46;50"
		},
		{
		    "title": "Simple Example for listSort function using sort_type(textnocase)",
		    "description": "Uses the listSort() function with delimiters to get the list which sorted by type textnocase(case-insensitive)",
		    "code": "list = \"10|RED|yeLLow|-246|green|ORange\";\nsortList = listSort(list, \"TextNoCase\", \"asc\", \"|\");\nwriteOutput(sortList);",
		    "result": "-246|10|green|ORange|RED|yeLLow"
		}
	]
}
