{
	"name":"encodeForXMLAttribute",
	"type":"function",
	"syntax":"encodeForXMLAttribute(string [,canonicalize]);",
	"returns":"string",
	"related":["encodeForXML", "canonicalize"],
	"description":"Encodes a string for safe output within an XML attribute to prevent Cross Site Scripting attacks. Use encodeForXML when outputting a variable inside a XML tag body.",
	"params": [
		{"name":"string","description":"The string to encode.","required":true,"default":"","type":"string","values":[]},
		{"name":"canonicalize","description":"If set to true, canonicalization happens before encoding. If set to false, the given input string will just be encoded. \nWhen this parameter is not specified, canonicalization will not happen. By default, when canonicalization is performed, both mixed and multiple encodings will be allowed. \nTo use any other combinations you should canonicalize using canonicalize method and then do encoding.","required":false,"default":"false","type":"boolean","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"11", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-e-g/encodeforxmlattribute.html"},
		"lucee": {"minimum_version":"4.5", "notes":"", "docs":"https://docs.lucee.org/reference/functions/encodeforxmlattribute.html"},
		"railo": {"minimum_version":"4", "notes":"", "docs":"http://railodocs.org/index.cfm/function/EncodeForXMLAttribute"}
	},
	"links": [

	],
	"examples": [
		{
			"title": "Simple encodeForXMLAttribute Example",
			"description": "Encodes the single quote into an XML entity.",
			"code": "encodeForXMLAttribute(\"It's for use in attribute values\")",
			"result": "It&#x27;s for use in attribute values"
		}
	]

}
