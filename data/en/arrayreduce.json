{
	"name":"arrayReduce",
	"type":"function",
	"syntax":"arrayReduce(array, function(result, item [,index, array])[, initialValue])",
	"member":"someArray.reduce(function(result, item [,index, array])[, initialValue])",
	"returns":"any",
	"related": ["ArrayMap"],
	"description":"Iterates over every entry of the array and calls the closure to work on the elements of the array. This function will reduce the array to a single value and will return the value.",
	"params":[
		{"name":"array", "description":"the input array", "default":"","type":"array","required":true, "values":[]},
		{"name":"callback", "description":"Closure or a function reference that will be called for each of the iteration. The arguments passed to the callback are\r\n\r\nresult: result of the reduce operation after the previous iteration\r\nitem: item in the array\r\nindex : current index for the iteration\r\narray : reference of the original array", "default":"","type":"function","required":true, "values":[]},
		{"name":"initialValue", "description":"Initial value which will be used for the reduce operation. The type is any.", "default":"","type":"any","required":false, "values":[]}
	],
	"engines":{
			"coldfusion":{"minimum_version":"11","notes":"","docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arrayreduce.html"},
			"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/arrayreduce.html"}
		},
	"links":[
		{
			"title":"Practical uses for reduce functions",
			"description":"Blog entry by John Whish covering some practical uses for reduce functions in CFML.",
			"url":"https://coldfusion.adobe.com/2019/02/practical-uses-reduce-functions/"
		},
		{
			"title":"Map, Reduce and other Higher Order Functions",
			"description":"A Primer for map, reduce, filter, and Higher Order Functions in general.",
			"url":"http://ryanguill.com/functional/higher-order-functions/2016/05/18/higher-order-functions.html"
		},
		{
			"title": "ColdFusion 11: .map() and .reduce()",
			"description": "A look at the new .map() and .reduce() methods that each of array, struct and lists all have",
			"url":"http://blog.adamcameron.me/2014/02/coldfusion-11-map-and-reduce.html"
		}],
	"examples":[
        {
			"title": "Simple arrayReduce Example",
			"description": "Sum each `a` element in the array",
			"code": "complexData = [ {a: 4}, {a: 18}, {a: 51} ];sum = arrayReduce( complexData, function(prev, element){\n\treturn prev + element.a;\n}, 0 );\nwriteOutput(sum);",
			"result": "73"
		}
    ]
}
