{
	"name": "isDefined",
	"type": "function",
	"syntax": "isDefined(variable_name)",
	"returns": "boolean",
	"related": ["structKeyExists", "isEmpty", "ArrayIsDefined"],
	"description": "Evaluates a string value to determine whether the variable named in it exists.\n NOTE: Passing an Array entry like `isDefined('thisArray[2]')` will error. Use `ArrayIsDefined()` instead. \n NOTE 2: If you are evaluating a variable inside a structure, you may get a slight performance boost using `StructKeyExists()`.",
	"params": [{
		"name": "variable_name",
		"description": "The quoted string of the variable to test for existence. If `variable_name` is passed without quotes and the variable doesn't exist, an error will be thrown rather than returning `false`.",
		"required": true,
		"default": "",
		"type": "string",
		"values": []
	}],
	"engines": {
		"coldfusion": {
			"minimum_version": "3",
			"notes": "",
			"docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-in-k/isdefined.html"
		},
		"lucee": {
			"minimum_version": "",
			"notes": "",
			"docs": "https://docs.lucee.org/reference/functions/isdefined.html"
		},
		"railo": {
			"minimum_version": "",
			"notes": "",
			"docs": "http://railodocs.org/index.cfm/function/isdefined"
		},
		"openbd": {
			"minimum_version": "",
			"notes": "",
			"docs": "http://openbd.org/manual/?/function/isdefined"
		}
	},
	"links": [{
		"title": "structKeyExists() vs isDefined()",
		"description": "An Adobe Forums discussion on the differences between structKeyExists() and isDefined().",
		"url": "https://forums.adobe.com/thread/491991"
	}],
	"examples": [{
			"title": "Using IsDefined",
			"description": "Checking for the existence of a `form` variable.",
			"code": "<cfif isDefined(\"form.submit\")>...</cfif>",
			"result": ""
		},
		{
			"title": "Scope Evaluation Order and Unscoped Variables",
			"description": "Beware of scope evaluation order when checking for an unscoped variable name.",
			"code": "url.foo = \"url.foo\" ; form.foo = \"form.foo\"; writeoutput(\"Is 'foo' defined? \" & isDefined(\"foo\")); writeoutput(isDefined(\"foo\") ? \" (\" & foo & \")\" : \"\");",
			"result": "Is 'foo' defined? YES (url.foo)"
		}, 
		{
			"title": "Dot-notation Variable Names",
			"description": "Potentially unexpected behavior when checking for a dot-notation variable containing a scope name.",
			"code": "local[\"form.submit\"] = \"local['form.submit']\" ; form.submit = \"form.submit\"; writeoutput(\"Is 'form.submit' defined?\" & isDefined(\"form.submit\")); writeoutput(isDefined(\"form.submit\") ? \" (\" & form.submit & \")\" : \"\"); writeoutput(\"<br>\"); writeoutput(\"Is 'submit' defined? \" & isDefined(\"submit\")); writeoutput(isDefined(\"submit\") ? \" (\" & submit & \")\" : \"\");",
			"result": "Is 'form.submit' defined? YES (local['form.submit']) Is 'submit' defined? YES(form.submit)"
		}
	]
}
