{
	"name":"cacheRegionNew",
	"type":"function",
	"syntax":"cacheRegionNew(region [, properties] [, throwOnError])",
	"returns":"void",
	"related":["cacheRegionExists"],
	"description":"Creates a new custom cache region (if no cache region exists).",
	"params": [
		{"name":"region","description":"Name of the new cache region to be created.","required":true,"default":"","type":"string","values":[]},
		{"name":"properties","description":"Struct that contains the cache region properties.","required":false,"default":"","type":"struct","values":[]},
		{"name":"throwOnError","description":"A Boolean value specifying if to throw an exception if the cache region name you specify already exists.","required":false,"default":"true","type":"boolean","values":[]},
		{"name":"password ","description":"Lucee5+ The password for the web administrator is required to interact with Cache Connections.","required":false,"default":"","type":"string","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"10", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-c-d/CacheRegionNew.html"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/cacheregionnew"},
		"lucee":{"minimum_version":"5", "notes":"Only been added for compatibility to other CFML Engines. These functions are already marked as \"deprecated\" and it's strongly suggested not to use them in new code.", "docs":"https://docs.lucee.org/reference/functions/cacheregionnew.html","deprecated":"5"}
	},
	"links": [
		{
			"title": "Lucee 5 New cache functions",
			"description": "List and note about newly added cache functions",
			"url": "https://docs.lucee.org/guides/lucee-5/functions-tags.html#cache-functions"
		}
	],
	"examples": [
		{
			"title": "Tag Syntax",
			"description": "Defining properties for the struct ",
			"code": "<cfset defaultCacheProps = structNew()> \r\n <cfset defaultCacheProps.CLEARONFLUSH = 'true'> \r\n <cfset defaultCacheProps.DISKEXPIRYTHREADINTERVALSECONDS = '3600'> \r\n <cfset defaultCacheProps.DISKPERSISTENT = 'false'> \r\n <cfset defaultCacheProps.DISKSPOOLBUFFERSIZEMB = '30'> \r\n <cfset defaultCacheProps.ETERNAL = 'false'> \r\n <cfset defaultCacheProps.MAXELEMENTSINMEMORY = '5'> \r\n <cfset defaultCacheProps.MAXELEMENTSONDISK = '10'> \r\n <cfset defaultCacheProps.MEMORYEVICTIONPOLICY = 'LRU'> \r\n <cfset defaultCacheProps.OBJECTTYPE = 'OBJECT'> \r\n <cfset defaultCacheProps.OVERFLOWTODISK = 'true'> \r\n <cfset defaultCacheProps.TIMETOLIVESECONDS = '5'> \r\n <cfset defaultCacheProps.TIMETOIDLESECONDS = '30'> \r\n <cfset cacheRegionNew('testregion',#defaultCacheProps#,false)> \r\n <!--- Defining a struct object ---> \r\n <cfset obj1 = structNew()> \r\n <cfset obj1.name = 'xyz'> \r\n <cfset timeToLive = createTimespan(0,0,5,0)> \r\n <cfset timeToIdle = createTimespan(0,0,10,0)> \r\n <!--- Putting Cache in the USD specific cache ---> \r\n <cfoutput>Starting to write to cache.</cfoutput> \r\n <cfset cachePut('obj1',obj1,timetoLive,timeToIdle,'testregion')> \r\n <cfoutput>Trying to fetch cached item...</cfoutput> \r\n <cfset obj = cacheGet('obj1','testregion')> \r\n <br/> \r\n <cfoutput>Done!!<br></cfoutput> \r\n <cfoutput>#obj.name#</cfoutput> \r\n",
			"result": ""
		}
	]
}
