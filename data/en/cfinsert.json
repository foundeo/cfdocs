{
	"name":"cfinsert",
	"type":"tag",
	"syntax":"<cfinsert datasource=\"\" tablename=\"\">",
	"related":["cfquery","cfupdate"],
	"description":"Inserts records in data sources from data in a CFML form\n or form Scope.\n\nIt can be used instead of cfquery with insert sql command.",
	"params": [
		{"name":"datasource","description":"Data source; contains table.","required":true,"default":"","type":"string","values":[]},
		{"name":"tablename","description":"Table in which to insert form fields.\n\n ORACLE drivers: must be uppercase.\n Sybase driver: case-sensitive. Must be the same case used\n when table was created","required":true,"default":"","type":"string","values":[]},
		{"name":"tableowner","description":"For data sources that support table ownership (such as SQL\n Server, Oracle, and Sybase SQL Anywhere), use this field to\n specify the owner of the table.","required":false,"default":"","type":"string","values":[]},
		{"name":"tablequalifier","description":"For data sources that support table qualifiers, use this\n field to specify qualifier for table. The purpose of table\n qualifiers varies among drivers. For SQL Server and\n Oracle, qualifier refers to name of database that contains\n table. For Intersolv dBASE driver, qualifier refers to\n directory where DBF files are located.","required":false,"default":"","type":"string","values":[]},
		{"name":"username","description":"Overrides username specified in ODBC setup.","required":false,"default":"","type":"string","values":[]},
		{"name":"password","description":"Overrides password specified in ODBC setup.","required":false,"default":"","type":"string","values":[]},
		{"name":"formfields","description":"Comma-delimited list of form fields to insert. If not\n specified, all fields in the form are included.\n\n If a form field is not matched by a column name in the\n database, CFML throws an error.\n\n The database table key field must be present in the form.\n It may be hidden.","required":false,"default":"","type":"string","values":[]},
		{"name":"providerdsn","description":"","required":false,"default":"","type":"string","values":[]},
		{"name":"dbtype","description":"","required":false,"default":"","type":"string","values":[]},
		{"name":"dbname","description":"","required":false,"default":"","type":"string","values":[]},
		{"name":"dbserver","description":"","required":false,"default":"","type":"string","values":[]},
		{"name":"provider","description":"","required":false,"default":"","type":"string","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"", "notes":"CF6+ `providerdsn`, `dbtype`, `dbname`, `dbserver` and `provider` are deprecated in all engines", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-i/cfinsert.html"},
		"lucee": {"minimum_version":"", "notes":"`providerdsn`, `dbtype`, `dbname`, `dbserver` and `provider` are deprecated in all engines", "docs":"https://docs.lucee.org/reference/tags/insert.html"},
		"railo": {"minimum_version":"", "notes":"`providerdsn`, `dbtype`, `dbname`, `dbserver` and `provider` are deprecated in all engines", "docs":"http://railodocs.org/index.cfm/tag/cfinsert"},
		"openbd": {"minimum_version":"", "notes":"`providerdsn`, `dbtype`, `dbname`, `dbserver` and `provider` are deprecated in all engines", "docs":"http://openbd.org/manual/?/tag/cfinsert"}
	},
	"links": [],
	"examples": [
		{
			"title": "Insert a record using passed form fields",
			"description": "Uses the cfinsert function to insert a record into the a users table based on a list form fields",
			"code": "cfinsert( datasource=\"myDsn\", tablename=\"users\", formFields=\"firstName,lastName,emailAddress\" );",
			"result": ""
		}
	]
}
