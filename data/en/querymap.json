{
	"name": "queryMap",
	"type": "function",
	"syntax": "queryMap(query, function(row [, currentRow] [, query] ){} [, parallel] [, maxThreads])",
	"member": "query.map(function(row [, currentRow] [, query] ){} [, parallel] [, maxThreads])",
	"returns": "query",
	"related": ["queryFilter","queryReduce","querySome","queryEach"],
	"description": "Maps each query row using a function to manipulate the rows fields",
	"params": [
		{"name": "query", "description": "query to process entries from", "required": true, "default": "", "type": "query", "values": []},
		{"name":"callback","description":"Closure or a function reference that will be called for each of the iteration.",
			"callback_params": [
			{
				"values": [],
				"default": "",
				"description": "A struct with all of the columns for the current iteration",
				"name": "row",
				"type": "struct",
				"required": false
			},{
				"values": [],
				"default": "",
				"description": "The value for the current iteration",
				"name": "currentRow",
				"type": "numeric",
				"required": false
			},{
				"values": [],
				"default": "",
				"description": "A reference of the original struct",
				"name": "query",
				"type": "query",
				"required": false
			}],"type":"boolean","required":"true","values":[],"default":""},
		{"name":"parallel","description":"Lucee4.5+ true if the items can be executed in parallel","required":false,"default":"false","type":"boolean","values":[true, false]},
		{"name":"maxThreads","description":"Lucee4.5+ the maximum number of threads to use when parallel = true","required":false,"default":"20","type":"numeric","values":[]}
	],
	"engines": {
		"lucee": {"minimum_version": "", "notes": "", "docs": "https://docs.lucee.org/reference/functions/querymap.html"},
		"coldfusion": {"minimum_version": "2016", "notes": "", "docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-m-r/querymap.html"}
	},
	"examples": [{
		"title":"Maps query results",
		"description":"Manipulates query column",
		"code":"news = queryNew(\"id,title\",\n\t\"integer,varchar\", [{\n\t\t\"id\": 1,\n\t\t\"title\": \"Dewey defeats Truman\"\n\t}, {\n\t\t\"id\": 2,\n\t\t\"title\": \"Man walks on Moon\"\n\t}]\n);\n\nwriteDump(news);\n\nfunction mapQuery(any Obj) {\n\tif (Obj.id == 1)\n\t\tObj.title = \"NEW: \" & Obj.title;\n\treturn Obj;\n}\n\nnewQuery = QueryMap(news, mapQuery);\nwriteDump(newQuery);",
		"result":""
	}],
	"links":[{
		"title":"Map, Reduce and other Higher Order Functions",
		"description":"A Primer for map, reduce, filter, and Higher Order Functions in general.",
		"url":"http://ryanguill.com/functional/higher-order-functions/2016/05/18/higher-order-functions.html"
	},{
		"title": "ColdFusion 2016: query iteration functions",
		"description": "A look at the higher-order functions that queries have",
		"url":"http://blog.adamcameron.me/2016/02/coldfusion-2016-query-iteration.html"
	}]
}
