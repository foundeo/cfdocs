{
	"name":"cacheIdExists",
	"type":"function",
	"syntax":"cacheIdExists(id [, region])",
	"returns":"boolean",
	"related":[],
	"description":"Used to find if a cached object exists in the cache region. The region can be the default cache region (either at server or application level) or the custom region you specify.",
	"params": [
		{"name":"id","description":"The ID of the cached object.","required":true,"default":"","type":"string","values":[]},
    {"name":"region","description":"The cache region where you check for the cached object.","required":false,"default":"","type":"string","values":[]}
	],
	"engines": {
		"coldfusion": {"minimum_version":"10", "notes":"", "docs":"https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-c-d/cacheidexists.html"},
		"lucee": {"minimum_version":"", "notes":"", "docs":"https://docs.lucee.org/reference/functions/cacheidexists.html"},
		"railo": {"minimum_version":"", "notes":"", "docs":"http://railodocs.org/index.cfm/function/CacheIdExists"},
		"openbd": {"minimum_version":"", "notes":"", "docs":"http://openbd.org/manual/?/function/cacheidexists"}
	},
	"links": [

	],
	"examples": [
		{
			"title": "Tag Syntax",
			"description": "Checks if the cache object is present in the user-defined cache region",
			"code": "<!--- Creating a new object ---> \r\n <cfset obj1 = structNew()> \r\n <cfset obj1.name = 'xyz'> \r\n <!--- Defining the time to live and time to Idle parameters ---> \r\n <cfset timeToLive=createTimespan(0,0,0,30)> \r\n <cfset timeToIdle=createTimespan(0,0,0,30)> \r\n <cfoutput>Starting to write to cache..</cfoutput> \r\n <cfset cachePut('obj1',obj1,timeToLive,timeToIdle,'customcache')> \r\n <br/> \r\n <cfoutput>Done!!</cfoutput> \r\n <cfoutput>Trying to check if the cached item is present...</cfoutput> \r\n <cfoutput>#cacheIdExists('obj1','customcache')#</cfoutput> \r\n",
			"result": ""
		},
        {
			"title": "Tag Syntax",
			"description": "Checks if the cache object is present in the default cache region",
			"code": "<cfset obj2 = structNew()> \r\n <cfset obj2.name = 'xyz'> \r\n <cfoutput>Starting to write to cache..</cfoutput> \r\n <cfset cachePut('obj2',obj2)> \r\n <br/> \r\n <cfoutput>Done!!</cfoutput> \r\n <cfoutput>Trying to fetch cached item...</cfoutput> \r\n <cfset obj = cacheGet('obj2')> \r\n <cfoutput>#cacheIdExists('obj2','OBJECT')#</cfoutput> \r\n",
			"result": ""
		}
	]

}